import re
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, InputMediaPhoto, InputMedia
from config import GROUP_ID

def format_price_rub(amount: int) -> str:
    return f"{amount:,}".replace(",", ".") + " —Ä—É–±."

def parse_price_to_int(text: str):
    if not text:
        return None
    cleaned = re.sub(r"[^\d]", "", text)
    return int(cleaned) if cleaned else None

def build_buy_kb(lot_id: int) -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üõí –ö—É–ø–∏—Ç—å", callback_data=f"buy_lot:{lot_id}")],
        [InlineKeyboardButton(text="üöö –ö—É–ø–∏—Ç—å —Å –¥–æ—Å—Ç–∞–≤–∫–æ–π", callback_data=f"buy_lot_delivery:{lot_id}")]
    ])

async def refresh_lot_keyboard(bot, lot) -> None:
    """
    –û–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ª–æ—Ç–∞ –≤ –≥—Ä—É–ø–ø–µ:
    - –º–µ–Ω—è–µ—Ç —Å—Ç–∞—Ç—É—Å üî¥/üü¢ –≤ caption
    - –æ–±–Ω–æ–≤–ª—è–µ—Ç inline-–∫–Ω–æ–ø–∫–∏ (–∏–ª–∏ —É–±–∏—Ä–∞–µ—Ç –∏—Ö)
    """
    if not getattr(lot, "message_id", None):
        return

    # —Å—Ç–∞—Ç—É—Å –≤ –Ω–∞—á–∞–ª–µ
    status_icon = "üü¢" if getattr(lot, "is_active", False) else "üî¥"

    caption = (
        f"{status_icon} –õ–æ—Ç ID: {lot.id}\n\n"
        f"üì¶ {lot.name}\n\n"
        f"{lot.description or ''}\n\n"
        f"üí∞ {format_price_rub(lot.price)}"
    )

    kb = build_buy_kb(lot.id) if getattr(lot, "is_active", False) else None


    media = InputMediaPhoto(media=lot.photo, caption=caption)
    await bot.edit_message_media(
        chat_id=GROUP_ID,
        message_id=lot.message_id,
        media=media,
        reply_markup=kb)
