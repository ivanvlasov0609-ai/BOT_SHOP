from aiogram import Router, F
from aiogram.types import CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from sqlalchemy.ext.asyncio import AsyncSession
from sqlalchemy.future import select
from config import START_PHOTO
from db import Lot
from handlers.lots import format_price_rub
from config import GROUP_ID,ADMINS
from keyboards.inline import client_kb,admin_main_kb

router = Router()


@router.callback_query(F.data == "catalog")
async def show_catalog(call: CallbackQuery, session: AsyncSession):
    # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –º–µ–Ω—é)
    try:
        await call.message.delete()
    except:
        pass

    result = await session.execute(select(Lot))
    lots = result.scalars().all()

    if not lots:
        await call.message.answer(
            "üì¶ –ö–∞—Ç–∞–ª–æ–≥ –ø—É—Å—Ç, –ø–æ–∫–∞ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ª–æ—Ç–æ–≤.",
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="‚¨Ö –ù–∞–∑–∞–¥", callback_data="back_to_main")]
            ])
        )
        return

    text_lines = ["üìÇ <b>–ö–∞—Ç–∞–ª–æ–≥ –ª–æ—Ç–æ–≤:</b>\n"]

    for lot in lots:
        status = "üü¢ –í –Ω–∞–ª–∏—á–∏–∏" if lot.is_active else "üî¥ –ü—Ä–æ–¥–∞–Ω"
        link = f"https://t.me/c/{str(GROUP_ID)[4:]}/{lot.message_id}" if lot.message_id else None

        line = (
            f"üì¶ <a href='{link}'>–õ–æ—Ç ID: {lot.id}</a> | {lot.name}\n"
            f"üí∞ {format_price_rub(lot.price)}\n"
            f"{status}\n"
            f"‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ"
        )
        text_lines.append(line)

    catalog_text = "\n".join(text_lines)

    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚¨Ö –ù–∞–∑–∞–¥", callback_data="back_to_main_k")]
    ])

    await call.message.answer(catalog_text, disable_web_page_preview=True, reply_markup=kb)


# –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∫–ª–∏–µ–Ω—Ç–∞
@router.callback_query(F.data == "back_to_main_k")
async def back_to_main(call: CallbackQuery):
    # –£–¥–∞–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–ª—é–±–æ–µ, —Ç–µ–∫—Å—Ç –∏–ª–∏ —Ñ–æ—Ç–æ)
    if call.from_user.id not in ADMINS:
        kb=admin_main_kb
    else:kb=client_kb
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ —Ñ–æ—Ç–æ –∏ –º–µ–Ω—é

    await call.message.answer_photo(
        photo=START_PHOTO,
        caption="üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∏–∂–µ:",
        reply_markup=kb
    )
