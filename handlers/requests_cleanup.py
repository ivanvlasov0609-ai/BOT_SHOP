# handlers/requests_cleanup.py
import logging
from datetime import datetime, timedelta

from aiogram import Router, F
from aiogram.types import CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from sqlalchemy.ext.asyncio import AsyncSession
from sqlalchemy import delete, select

from db import Request, AdminNotification
from keyboards.inline import back_kb  # –µ—Å–ª–∏ –Ω—É–∂–Ω–æ, –ª–∏–±–æ —Å–æ–±–µ—Ä—ë–º –ª–æ–∫–∞–ª—å–Ω–æ

router = Router()
log = logging.getLogger(__name__)

@router.callback_query(F.data.startswith("requests_cleanup_do:"))
async def requests_cleanup_do(call: CallbackQuery, session: AsyncSession):
    await call.answer()
    days = int(call.data.split(":")[1])
    threshold = datetime.utcnow() - timedelta(days=days)

    # –Ω–∞–π–¥—ë–º id –∑–∞—è–≤–æ–∫, –∫–æ—Ç–æ—Ä—ã–µ —É–¥–∞–ª—è–µ–º
    res = await session.execute(
        select(Request.id).where(Request.status == "done").where(Request.created_at < threshold)
    )
    req_ids = res.scalars().all()

    if not req_ids:
        await call.answer("–ù–µ—Ç –∑–∞—è–≤–æ–∫ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.", show_alert=True)
        return

    # —É–¥–∞–ª—è–µ–º —Å–≤—è–∑–∞–Ω–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    del_notes = await session.execute(
        delete(AdminNotification).where(AdminNotification.request_id.in_(req_ids))
    )
    # —É–¥–∞–ª—è–µ–º —Å–∞–º–∏ –∑–∞—è–≤–∫–∏
    del_reqs = await session.execute(
        delete(Request).where(Request.id.in_(req_ids))
    )
    await session.commit()

    deleted_notes = del_notes.rowcount or 0
    deleted_reqs = del_reqs.rowcount or len(req_ids)

    await call.message.edit_text(
        f"‚úÖ –£–¥–∞–ª–µ–Ω–æ –∑–∞—è–≤–æ–∫: <b>{deleted_reqs}</b>\n"
        f"üóí –£–¥–∞–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: <b>{deleted_notes}</b>",
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="‚¨Ö –ù–∞–∑–∞–¥ –∫ –∑–∞—è–≤–∫–∞–º", callback_data="requests")],
            [InlineKeyboardButton(text="üè† –í –ø–∞–Ω–µ–ª—å", callback_data="open_admin_panel")],
        ])
    )
